<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
	<testsuite tests="1" failures="1" time="0.405" name="xqledger/gitreader/grpc">
		<properties>
			<property name="go.version" value="go1.17.2"></property>
		</properties>
		<testcase classname="grpc" name="TestRecordHistoryService" time="0.250">
			<failure message="Failed" type="">&#xA;  Should GetRecordHistory ï¿½[31mðŸ”¥ï¿½[0m&#xA;&#xA;ï¿½[31m&#xA;Errors:&#xA;&#xA;  * /Users/administrator/workspace/projects/go/src/xqledger/gitreader/grpc/grpcserver_test.go &#xA;  Line 51: - runtime error: invalid memory address or nil pointer dereference &#xA;  goroutine 6 [running]:&#xA;  panic({0x1676000, 0x1ca4190})&#xA;  xqledger/gitreader/grpc.TestRecordHistoryService.func1()&#xA;  github.com/jtolds/gls.(*ContextManager).SetValues.func1(0x0)&#xA;  github.com/jtolds/gls.EnsureGoroutineId.func1()&#xA;  github.com/jtolds/gls._m(0x16b48e0, 0xc000121d01)&#xA;  github.com/jtolds/gls.github_com_jtolds_gls_markS(0xc0001d38f0, 0x0)&#xA;  github.com/jtolds/gls.addStackTag(...)&#xA;  github.com/jtolds/gls.EnsureGoroutineId(0xc0001d38f0)&#xA;  github.com/jtolds/gls.(*ContextManager).SetValues(0xc0001e2a70, 0xc0001d3890, 0xc0002201a0)&#xA;  xqledger/gitreader/grpc.TestRecordHistoryService(0xc0001ded00)&#xA;  testing.tRunner(0xc0001ded00, 0x1771370)&#xA;  created by testing.(*T).Run&#xA;  &#xA;  goroutine 1 [chan receive]:&#xA;  testing.(*T).Run(0xc0001deb60, {0x174b23c, 0x1135285e90e89}, 0x1771370)&#xA;  testing.runTests.func1(0xc0001d3620)&#xA;  testing.tRunner(0xc0001deb60, 0xc000177d18)&#xA;  testing.runTests(0xc00016e680, {0x1ca5ac0, 0x1, 0x1}, {0x166f860, 0xc0001d3530, 0x1cbbb80})&#xA;  testing.(*M).Run(0xc00016e680)&#xA;  main.main()&#xA;  &#xA;  goroutine 7 [select]:&#xA;  google.golang.org/grpc.(*ccBalancerWrapper).watcher(0xc0000330e0)&#xA;  created by google.golang.org/grpc.newCCBalancerWrapper&#xA;  &#xA;  goroutine 8 [select]:&#xA;  net.(*Resolver).lookupIPAddr(0x1cbac20, {0x18286c8, 0xc00031a300}, {0x173b1ed, 0x11352861348e3}, {0xc000202350, 0x9})&#xA;  net.(*Resolver).internetAddrList(0x18286c8, {0x18286c8, 0xc00031a300}, {0x173b1ed, 0x3}, {0xc000202350, 0xf})&#xA;  net.(*Resolver).resolveAddrList(0x1cec478, {0x18286c8, 0xc00031a300}, {0x173b6a7, 0x4}, {0x173b1ed, 0x203000}, {0xc000202350, 0xf}, {0x0, ...})&#xA;  net.(*Dialer).DialContext(0xc00011d078, {0x18286c8, 0xc00031a300}, {0x173b1ed, 0xc00016e880}, {0xc000202350, 0x109dce4})&#xA;  google.golang.org/grpc/internal/transport.proxyDial({0x18286c8, 0xc00031a300}, {0xc000202350, 0xc00011d180}, {0x174340e, 0xe})&#xA;  google.golang.org/grpc/internal/transport.dial({0x18286c8, 0xc00031a300}, 0x0, {{0xc000202350, 0xf}, {0xc000202350, 0xf}, 0x0, 0x0, {0x0, ...}}, ...)&#xA;  google.golang.org/grpc/internal/transport.newHTTP2Client({_, _}, {_, _}, {{0xc000202350, 0xf}, {0xc000202350, 0xf}, 0x0, 0x0, ...}, ...)&#xA;  google.golang.org/grpc/internal/transport.NewClientTransport(...)&#xA;  google.golang.org/grpc.(*addrConn).createTransport(0xc0001fa840, {{0xc000202350, 0xf}, {0xc000202350, 0xf}, _, _, {_, _}}, {{0x174340e, ...}, ...}, ...)&#xA;  google.golang.org/grpc.(*addrConn).tryAllAddrs(0xc0001fa840, {0xc0001e0c80, 0x1, 0x0}, {0x0, 0x0, 0x1cbbb80})&#xA;  google.golang.org/grpc.(*addrConn).resetTransport(0xc0001fa840)&#xA;  created by google.golang.org/grpc.(*addrConn).connect&#xA;  &#xA;  goroutine 10 [runnable]:&#xA;  fmt.(*pp).free(0xc0000aa000)&#xA;  fmt.Sprintf({0x1764ffe, 0x50}, {0xc0001219d8, 0x2, 0x2})&#xA;  google.golang.org/grpc/internal/channelz.Warningf({0x183c438, 0xc00018f960}, 0xc0002024a0, {0x1764ffe, 0x0}, {0xc0001219d8, 0x0, 0x0})&#xA;  google.golang.org/grpc.(*addrConn).createTransport(0xc0001fab00, {{0xc0002024a0, 0xf}, {0xc0002024a0, 0xf}, _, _, {_, _}}, {{0x174340e, ...}, ...}, ...)&#xA;  google.golang.org/grpc.(*addrConn).tryAllAddrs(0xc0001fab00, {0xc0001e0ec0, 0x1, 0x0}, {0x0, 0x0, 0x1cbbb80})&#xA;  google.golang.org/grpc.(*addrConn).resetTransport(0xc0001fab00)&#xA;  created by google.golang.org/grpc.(*addrConn).connect&#xA;  &#xA;  goroutine 21 [select]:&#xA;  net.cgoLookupIP({0x1828658, 0xc00030c0c0}, {0x173b1ed, 0x9}, {0xc000202350, 0x0})&#xA;  net.(*Resolver).lookupIP(0x1cbac20, {0x1828658, 0xc00030c0c0}, {0x173b1ed, 0x3}, {0xc000202350, 0x9})&#xA;  net.glob..func1({0x1828658, 0xc00030c0c0}, 0x0, {0x173b1ed, 0x0}, {0xc000202350, 0x0})&#xA;  net.(*Resolver).lookupIPAddr.func1()&#xA;  internal/singleflight.(*Group).doCall(0x1cbac30, 0xc0003001e0, {0xc000324040, 0xd}, 0x0)&#xA;  created by internal/singleflight.(*Group).DoChan&#xA;  &#xA;  goroutine 66 [chan receive]:&#xA;  net.(*Resolver).lookupIPAddr.func2()&#xA;  created by net.(*Resolver).lookupIPAddr&#xA;  &#xA;  goroutine 22 [syscall]:&#xA;  net._C2func_getaddrinfo(0xc000324026, 0x0, 0xc0003022a0, 0xc00031e018)&#xA;  net.cgoLookupIPCNAME.func1({0xc000324026, 0x0, 0x0}, 0xc000202350, 0xc000316e50)&#xA;  net.cgoLookupIPCNAME({0x173b1ed, 0x3}, {0xc000202350, 0x0})&#xA;  net.cgoIPLookup(0x1cbac30, {0x173b1ed, 0xc000324040}, {0xc000202350, 0x0})&#xA;  created by net.cgoLookupIP&#xA;  &#xA;&#xA;ï¿½[0mï¿½[33mï¿½[0mï¿½[31m&#xA;1 total assertionï¿½[0m&#xA;&#xA;&#xA;  Should GetContentInCommit ï¿½[33mâœ˜ï¿½[0m&#xA;&#xA;ï¿½[31mï¿½[0mï¿½[33m&#xA;Failures:&#xA;&#xA;  * /Users/administrator/workspace/projects/go/src/xqledger/gitreader/grpc/grpcserver_test.go &#xA;  Line 66:&#xA;  Expected: nil&#xA;  Actual:   &#39;rpc error: code = Unavailable desc = connection closed&#39;&#xA;  goroutine 6 [running]:&#xA;  xqledger/gitreader/grpc.TestRecordHistoryService.func2()&#xA;  github.com/jtolds/gls.(*ContextManager).SetValues.func1(0x0)&#xA;  github.com/jtolds/gls.EnsureGoroutineId.func1()&#xA;  github.com/jtolds/gls._m(0x16b48e0, 0xc000173d01)&#xA;  github.com/jtolds/gls.github_com_jtolds_gls_markS(0xc000382660, 0x0)&#xA;  github.com/jtolds/gls.addStackTag(...)&#xA;  github.com/jtolds/gls.EnsureGoroutineId(0xc000382660)&#xA;  github.com/jtolds/gls.(*ContextManager).SetValues(0xc0001e2a70, 0xc000382600, 0xc000398200)&#xA;  xqledger/gitreader/grpc.TestRecordHistoryService(0xc0001ded00)&#xA;  testing.tRunner(0xc0001ded00, 0x1771370)&#xA;  created by testing.(*T).Run&#xA;  &#xA;&#xA;ï¿½[0mï¿½[31m&#xA;2 total assertionsï¿½[0m&#xA;&#xA;&#xA;  Should GetDiffTwoCommitsInFile ï¿½[33mâœ˜ï¿½[0m&#xA;&#xA;ï¿½[31mï¿½[0mï¿½[33m&#xA;Failures:&#xA;&#xA;  * /Users/administrator/workspace/projects/go/src/xqledger/gitreader/grpc/grpcserver_test.go &#xA;  Line 77:&#xA;  Expected: nil&#xA;  Actual:   &#39;rpc error: code = Unavailable desc = connection closed&#39;&#xA;  goroutine 6 [running]:&#xA;  xqledger/gitreader/grpc.TestRecordHistoryService.func3()&#xA;  github.com/jtolds/gls.(*ContextManager).SetValues.func1(0x0)&#xA;  github.com/jtolds/gls.EnsureGoroutineId.func1()&#xA;  github.com/jtolds/gls._m(0x16b48e0, 0xc000173d01)&#xA;  github.com/jtolds/gls.github_com_jtolds_gls_markS(0xc0000a6570, 0x0)&#xA;  github.com/jtolds/gls.addStackTag(...)&#xA;  github.com/jtolds/gls.EnsureGoroutineId(0xc0000a6570)&#xA;  github.com/jtolds/gls.(*ContextManager).SetValues(0xc0001e2a70, 0xc0000a6510, 0xc0000b6140)&#xA;  xqledger/gitreader/grpc.TestRecordHistoryService(0xc0001ded00)&#xA;  testing.tRunner(0xc0001ded00, 0x1771370)&#xA;  created by testing.(*T).Run&#xA;  &#xA;&#xA;ï¿½[0mï¿½[31m&#xA;3 total assertionsï¿½[0m&#xA;</failure>
		</testcase>
	</testsuite>
</testsuites>
